apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'
apply from : '../artifact-pom-manager.gradle'

ext {
    ver = '1.0.2'
    groupId = 'ru.beryukhov'
    artifactId = 'flowreactivenetwork'
    repo = 'FlowReactiveNetwork'
    repoName = 'FlowReactiveNetwork'
    vcsUrl = 'https://github.com/AndreySBer/FlowReactiveNetwork.git'
}

bintray {
    user = property('bintrayuser')
    key = property('bintraykey')
    publications = ['mavenPublish']

    pkg {
        repo = this.repo
        name = this.repoName
        userOrg = user
        licenses = ['Apache-2.0']
        vcsUrl = this.vcsUrl

        version {
            name = this.ver
            released = new Date()
        }
    }
}

if (isAndroidProject()) {
    task androidJavadocs(type: Javadoc) {
        title = "${getStringProperty("mavProjectName")} ${project.version} API"
        description "Generates Javadoc"
        source = android.sourceSets.main.java.srcDirs
        classpath += files(android.bootClasspath)

        android.libraryVariants.all { variant ->
            if (variant.name == 'release') {
                owner.classpath += variant.javaCompileProvider.get().classpath
            }
        }

        exclude '**/R.html', '**/R.*.html', '**/index.html', '**/*.kt'

        options {
            windowTitle("${getStringProperty("mavProjectName")} ${project.version} Reference")
            locale = 'en_US'
            encoding = 'UTF-8'
            charSet = 'UTF-8'
            links("http://docs.oracle.com/javase/7/docs/api/")
            linksOffline("http://d.android.com/reference", "${android.sdkDirectory}/docs/reference")
            setMemberLevel(JavadocMemberLevel.PUBLIC)
        }
    }

    task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
        classifier = 'javadoc'
        from androidJavadocs.destinationDir
    }

    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }
} else {
    task sourcesJar(type: Jar) {
        from sourceSets.main.allJava
        archiveClassifier = 'sources'
    }

    task javadocJar(type: Jar) {
        from javadoc
        archiveClassifier = 'javadoc'
    }
}

project.afterEvaluate {
    publishing {
        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/rocketguys/FlowReactiveNetwork")
                credentials {
                    username = System.getenv("GITHUB_ACTOR")
                    password = System.getenv("GITHUB_TOKEN")
                }
            }
        }
        publications {
            gpr(MavenPublication) {
                if (isAndroidProject()) {
                    artifact bundleReleaseAar
                    artifact androidJavadocsJar
                    artifact androidSourcesJar
                } else {
                    artifact jar
                    artifact sourcesJar
                    artifact javadocJar
                }
                groupId this.groupId
                artifactId this.artifactId
                version this.ver

                decoratePom(pom)
            }
        }
    }
}
